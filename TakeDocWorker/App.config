<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 --></configSections>
  <appSettings configSource="AppSettings.config" />
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="TakeDocEntities1" connectionString="metadata=res://*/Model.csdl|res://*/Model.ssdl|res://*/Model.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=localhost\sqlexpress;initial catalog=TakeDoc;persist security info=True;user id=sa;password=Kerenann06041979;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="MyContext" type="TakeDocModel.TakeDocEntities1, TakeDocModel" />
    <container>
      <register type="MyContext">
        <lifetime type="ContainerControlledLifetimeManager" />
      </register>
      <register type="TakeDocDataAccess.Document.Interface.IDaoDocument, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoDocument, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoPage, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoPage, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoVersion, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoVersion, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoPageStoreLocator, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoPageStoreLocator, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoVersionStoreLocator, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoVersionStoreLocator, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoMetaData, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoMetaData, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoTypeDocument, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoTypeDocument, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Parameter.Interface.IDaoEntity, TakeDocDataAccess" mapTo="TakeDocDataAccess.Parameter.DaoEntity, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoDataFieldValue, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoDataFieldValue, TakeDocDataAccess" />
      <register type="TakeDocDataAccess.Document.Interface.IDaoDataFieldAutoComplete, TakeDocDataAccess" mapTo="TakeDocDataAccess.Document.DaoDataFieldAutoComplete, TakeDocDataAccess" />

      <register type="TakeDocDataAccess.External.Interface.IDaoCustomer, TakeDocDataAccess" mapTo="TakeDocDataAccess.External.DaoCustomer, TakeDocDataAccess" />

      <register type="TakeDocService.Document.Interface.IMetaDataService, TakeDocService" mapTo="TakeDocService.Document.MetaDataService, TakeDocService" />
      <register type="TakeDocService.Document.Interface.IDataFieldService, TakeDocService" mapTo="TakeDocService.Document.DataFieldService, TakeDocService" />
      <register type="TakeDocService.Document.Interface.IImageService, TakeDocService" mapTo="TakeDocService.Document.ImageService, TakeDocService" />
      <register type="TakeDocService.Document.Interface.IDocumentService, TakeDocService" mapTo="TakeDocService.Document.DocumentService, TakeDocService" />
      <register type="TakeDocService.Document.Interface.IPageService, TakeDocService" mapTo="TakeDocService.Document.PageService, TakeDocService" />
      <register type="TakeDocService.Document.Interface.IVersionService, TakeDocService" mapTo="TakeDocService.Document.VersionService, TakeDocService" />
      <register type="TakeDocService.Document.Interface.ITypeDocumentService, TakeDocService" mapTo="TakeDocService.Document.TypeDocumentService, TakeDocService" />

      <register type="TakeDocService.Impression.Interface.IPdfService, TakeDocService" mapTo="TakeDocService.Impression.PdfService, TakeDocService" />
      <register type="TakeDocService.Impression.Interface.IReportVersionService, TakeDocService" mapTo="TakeDocService.Impression.ReportVersionService, TakeDocService" />

      <register type="TakeDocService.Workflow.Task.Interface.ISetStatusSend, TakeDocService" mapTo="TakeDocService.Workflow.Task.SetStatusSend, TakeDocService" />

      <register type="TakeDocService.Workflow.Task.Interface.ISetStatusSend, TakeDocService" mapTo="TakeDocService.Workflow.Task.SetStatusSend, TakeDocService" />

      <register type="TakeDocService.Security.Interface.IUserTkService, TakeDocService" mapTo="TakeDocService.Security.UserTkService, TakeDocService" />
    </container>
  </unity>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.0.0.0" newVersion="1.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>